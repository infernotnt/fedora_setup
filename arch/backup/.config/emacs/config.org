* Key bindings
  C-c e         open emacs config file (~/.conig/emacs/config.org)
  C-c r         refresh emacs config file (~/.conig/emacs/config.org)
  C-return      Open terminal
  M-s           Avi (plugin/package)
* Minor settings
#+begin_src emacs-lisp
  ; disable starting screen
  (setq inhibit-startup-message t)

  (scroll-bar-mode -1) ; Disable visible scrollbar
  (tool-bar-mode -1) ; Disable the toolbar
  ;(tooltip-mode -1) ; Disable tooltips
  (set-fringe-mode 10) ; TODO Give some breathing room
  (menu-bar-mode -1) ; Disable menu bar

  ;(setq visible-bell t) ; Set up the visible bell

  ; Theme
  (load-theme 'solarized-dark t) ; Requires install

  ; Changes the "yes or no" promtps to "y or n"
  (defalias 'yes-or-no-p 'y-or-n-p)


  ; disable autosave and automatic creation of backup files
  (setq make-backup-files nil)
  (setq auto-save-default nil)

  ; Makes scrolling sane
  (setq scroll-conservatively 100)



  ; Stop cursor blinking
  (blink-cursor-mode 0)

  ; Try typing lambda (not in a comment)
  ;(global-prettify-symbols-mode t)

  ; Highlights current line
  ;(global-hl-line-mode t)

  ; Indentation (TODO: pogledaj sve ovo, uzeto iz witchmacs)
  ;(setq-default tab-width 4)
  ;(setq-default standard-indent 4)
  ;(setq c-basic-offset tab-width)
  ;(setq-default electric-indent-inhibit t)
  ;(setq-default indent-tabs-mode t)
  ;(setq backward-delete-char-untabify-method 'nil)

  ;TODO: idk
  ;(global-prettify-symbols-mode t)

#+end_src

* Evil mode
#+begin_src emacs-lisp

(use-package evil
  :ensure t
  ;:defer .1 ;; don't block emacs when starting, load evil immediately after startup
  :init
  :config
  (evil-mode)
  (message "Loading evil-mode...done"))

; Treat Wrapped line scrolling as single lines
(define-key evil-normal-state-map (kbd "j") 'evil-next-visual-line)
(define-key evil-normal-state-map (kbd "k") 'evil-previous-visual-line)
; (TODO: not working, also don't know if i need everything(for things like using caps for escape AND ctrl)) esc quits pretty much anything (like pending prompts in the minibuffer)
;(define-key evil-normal-state-map [escape] 'keyboard-quit)
;(define-key evil-visual-state-map [escape] 'keyboard-quit)
;(define-key minibuffer-local-map [escape] 'minibuffer-keyboard-quit)
;(define-key minibuffer-local-ns-map [escape] 'minibuffer-keyboard-quit)
;(define-key minibuffer-local-completion-map [escape] 'minibuffer-keyboard-quit)
;(define-key minibuffer-local-must-match-map [escape] 'minibuffer-keyboard-quit)
;(define-key minibuffer-local-isearch-map [escape] 'minibuffer-keyboard-quit)

#+end_src
* Terminal
#+begin_src emacs-lisp
  (defvar my-term-shell "/bin/zsh")
  (defadvice ansi-term (before force-bash)
    (interactive (list my-term-shell)))
  (ad-activate 'ansi-term)


  ; TODO: global-set-key, vidi zasto ne radi, ova sama komanda i nije toliko bitna
  ;(global-set-key (kbd "<C-return>") 'ansi-term)
  (global-set-key (kbd "<C-return>") 'eval-buffer)

#+end_src

* Org
#+begin_src emacs-lisp

  (use-package org-bullets
    :ensure t
    :config
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))

  ; Enables the "<s TAB" code snippet for #+begin_src
  (require 'org-tempo)

  ;; ORG MODE
  ;; auto-indent an org-mode file
  ;(add-hook 'org-mode-hook
  ;(lambda()
  ;(Local-set-key (kbd "C-c C-c") 'org-table-align)
  ;(local-set-key (kbd "C-c C-f") 'org-table-calc-current-TBLFM)
  ;(org-indent-mode t)))


#+end_src

* Beacon
#+begin_src emacs-lisp
  ; Package that shows your cursor position on new buffer
  ;(use-package beacon
  ;  :ensure t
  ;  :init
  ;  (beacon-mode 1))

#+end_src 

* Which-key
#+begin_src emacs-lisp
; install which key
(use-package which-key
  :ensure t
  :init
  (which-key-mode))
#+end_src

* Ido
  *TODO: Good alternatives to Ido are /helm/ and /swiper/* (mozda nadji koji je dobar sa evil mode-om, i org mode-om)
  Ido essentialy makes it nicer to do stuff like open files, change buffers... (shows options, better autocompletion)
** Enable ido mode
#+begin_src emacs-lisp
  (setq ido-enable-flex-matching nil)
  (setq ido-create-new-buffer 'always)
  (setq ido-everywhere t)
  (ido-mode 1)
#+end_src
** ido vertical
   #+begin_src emacs-lisp
     (use-package ido-vertical-mode
       :ensure t
       :init
       (ido-vertical-mode 1))
     (setq ido-vertical-define-keys 'C-n-and-C-p-only) ; You can cycle through completions with C-n and C-p
   #+end_src   
** smex
   #+begin_src emacs-lisp
     (use-package smex
       :ensure t
       :init (smex-initialize)
       :bind
       ("M-x" . smex))
   #+end_src
   
** switch buffer
   #+begin_src emacs-lisp
     (global-set-key (kbd "C-x C-b") 'ido-switch-buffer)
   #+end_src
* buffers
  Uncle dave, meh msm da ne radi sa evil mode-om, a i mogu samo koristiti file exporer.
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-x b") `ibuffer)
  #+end_src
* avi
  #+begin_src emacs-lisp
    (use-package avy
      :ensure t
      :bind
      ("M-s" . avy-goto-char))
  #+end_src
* config edit/reload
** edit
   #+begin_src emacs-lisp
     (defun config-visit ()
       (interactive)
       (find-file "~/.config/emacs/config.org"))
     (global-set-key (kbd "C-c e") 'config-visit)
   #+end_src
** reload
   #+begin_src emacs-lisp
     (defun config-reload ()
       (interactive)
       (org-babel-load-file (expand-file-name "~/.config/emacs/config.org")))
     (global-set-key (kbd "C-c r") 'config-reload)
   #+end_src
